{% extends "base.html.twig" %}

{% block title %}Home{% endblock %}

{% block body %}
    <h1>Redovisningstexter</h1>
    <h2 id="kmom01">Kmom01</h2>
    <h3>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</h3>
    <p>
        Jag läste oopython-kursen förra våren så därifrån har man med sig en del. Utöver det har jag
        programmerat en hel del tidigare på egen hand och är ganska van med OO tankesättet.
    </p>

    <h3>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</h3>
    <p>
        Det går att skapa ett generisk objekt med stdClass men för att möjliggöra inkapsling så är det bättre att skapa sina egna klasser.
        Det är viktigt skilja på klassen och en instans av klassen. Det kan exemplevis finnas en klass som beskriver vad en bil är och olika metoder som den kan utföra.
        För att skapa en specifik bil skapas en instans av bilklassen. Inkapsling gör att vi kan skapa något som liknar ett API mot klassen där de som använder klassen inte behöver ha någon vetskap om dess implementation.
        På det sättet är det möjligt att ändra hur en klass fungerar internt utan att de som använder klassen behöver göra några ändringar.
    </p>

    <h3>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</h3>
    <p>
        De delar vi har arbetat med än så länge känns ganska tydliga. Det finns en del mappar som jag ännu inte riktigt vet vad de är till för som translations, var, vendor etc.
        Detta antar jag att man kommer få grepp om under kursens gång. Jag har tidigare arbetat en del med django vilket verkar ha en liknande struktur med mvc tankesättet så det blir intressant att jämföra dessa.
    </p>

    <h3>Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.</h3>
    <p>
        Jag har inte hunnit läsa allt än men jag tycker att det är intressant att läsa om tester och testdriven utveckling.
        Det är en del som jag skulle vilja bli bättre på och har delvis experimenterat med på egna projekt. Kombinationen av funktionella och unit test är spännande.
    </p>

    <h3>Vilken är din TIL för detta kmom?</h3>
    <p>
        Det stora med det det här kursmomentet var mest bara att få fötterna lite blöta med symfony. Jag ser fram emot kommande kmom.
    </p>

    <h2 id="kmom02">Kmom02</h2>
    <h3>Förklara kort de objektorienterade konstruktionerna arv, komposition, interface och trait och hur de används i PHP.</h3>
    <p>
        Arv är när en klass ärver egenskaper och metoder från en förälderklassdel. Det är en is-a relation.
        Komposition är en har-en relation där en klass innehåller en instans av en annan klass.
        Interface är ett löfte från en klass att erbjuda vissa metoder.
        Trait är en samling av medlemsvariabler och metoder som användas för att lägga på funktionalitet på en klass. Det blir en använder relation till klassen.
    </p>


    <h3>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden och dina klasser?</h3>
    <p>Jag tycker att min lösning blev ganska bra. Just nu ligger möjliga suits och values på kort i kortklassen. Egentligen skulle man kanske vilja att detta löses på ett annat sätt.
        Om man exemplevis skulle vilja ha andra suits eller värden än vad som är standard i en kortlek. För API-delen blev jag lite förvirrad vad man ville då det inte går att nå POST via webbläsaren.
        Jag provade att köra mina routes med curl så att de fungerade och det gick men sedan fick jag förslag att skapa formulär på /api routen vilket jag då gjorde istället.
        För att inte skicka parametrar via url så skapade jag en separat route /api/deck/draw-mutliple som använde Request istället.
        Jag gjorde också lite kontroll av vad som gavs för parametrar till min klasskonstruktorer för att se till att rätt värden gavs och kastade annars en beskrivande InvalidArgumentException.
        Jag tror att det kan vara nyttigt att jobba lite mer på det sättet med att försöka bygga lite stabilare lösningar då det ofta på skoluppgifterna blir att man endast löser exakt den inputen som finns i kraven och hanterar inget när det går fel.
        Nu var inte detta fullständigt men ett steg i rätt riktning skulle jag tro.
    </p>

    <h3>Vilka är dina reflektioner så här långt med att jobb i Symfony med applikationskod enligt MVC?</h3>
    <p>
        Jag måste säga att det känns trevligt. View och Controller känns som att det är ganska enkelt att jobba med och flödet känns naturligt.
    </p>

    <h3>Vilken är din TIL för detta kmom?</h3>
    <p>
        Det kändes givande att fundera över hur man skulle strukturera klasserna på bästa sätt.
    </p>


{% endblock %}